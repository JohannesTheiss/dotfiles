# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# for nested tmux sessions
bind-key a send-prefix

# confirm before killing a window or the server
bind-key x kill-window
bind-key X kill-server

######################
#### Key Bindings ####
######################

# Pane and Window Management.

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# synchronize all panes in a window
bind y setw synchronize-panes

# enable mouse support for switching panes/windows
setw -g mouse on

# Open new panes and splits in the same working directory.
bind c new-window -c "#{pane_current_path}"

# Ctrl+B p/n to swap windows.
# bind-key p swap-window -t -1
# bind-key n swap-window -t +1

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# This bit of configuration works by adding conditional logic to the ctrl-<direction> key bindings. 
# When one of these movement commands is used, it checks 
# if the current tmux pane is running vim. If so, the appropriate vim split navigation command is sent.
# Otherwise,the appropriate tmux pane navigation command is sent.
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
# bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
# bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
# bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
# bind-key -n C-\   if-shell  "$is_vim"  "send-keys C-\\"  "select-pane -l"

bind -r k select-pane -U 
bind -r j select-pane -D 
bind -r h select-pane -L 
bind -r l select-pane -R

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# allow mouse to select windows and panes
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on

# Start windows and panes at 1.
set -g base-index 1
set -g pane-base-index 1

# When we add/remove windows, renumber them in sequential order.
set -g renumber-windows on

# Active window title color
# setw -g window-status-current-style fg=black,bg=white

# c++ make
bind m send-keys -t 2 'make' Enter
bind s send-keys -t 2 './main' Enter


# Color error from :checkhealth
set-option -g default-terminal "screen-256color"

# ecape-time error from :checkhealth
set-option -sg escape-time 10
